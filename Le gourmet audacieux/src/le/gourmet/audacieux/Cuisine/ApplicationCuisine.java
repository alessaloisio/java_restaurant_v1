/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package le.gourmet.audacieux.Cuisine;

import Properties.Props;
import network.*;
import StringSlicer.*;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.LinkedHashSet;
import java.util.Properties;
import java.util.Vector;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
/**
 *
 * @author Alessandro Aloisio
 */
public class ApplicationCuisine extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel();
    NetworkBasicServer nbs;
    NetworkBasicClient nbc, nbcPlatPret;
    DefaultTableModel modeljTablePrepa;
    Properties prop;
    /**
     * Creates new form ApplicationCuisine
     */
    public ApplicationCuisine() {
        initComponents();
        
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setSize(485, 450);
        
        prop = Props.getProperties();
        
        nbs = new NetworkBasicServer(Integer.parseInt(prop.getProperty("portServ1")), this.CmdRecueCheckBox);

        this.jTableCommande.setEnabled(false);
        this.modeljTablePrepa = new DefaultTableModel(){
            private static final long serialVersionUID = 1L;  
            @Override
            public Class<?> getColumnClass(int column) {  
                    switch (column) {  
                        case 0:
                            return String.class;
                        case 1:
                            return String.class;
                        case 2:
                            return String.class;
                        case 3:
                            return String.class; 
                        case 4:
                            return Boolean.class;   
                        case 5:
                            return Boolean.class;
                        case 6:
                            return Boolean.class;
                        default:
                            return Boolean.class;
                    }  
            }
            public boolean isCellEditable(int row, int column)
            {
                if(column < 4)
                    return false;//This causes all cells to be not editable
                
                return true;
            }
        };
        modeljTablePrepa.addColumn("Quantité");
        modeljTablePrepa.addColumn("Plat");
        modeljTablePrepa.addColumn("Table");
        modeljTablePrepa.addColumn("Heure arrivée");
        modeljTablePrepa.addColumn("En préparation");
        modeljTablePrepa.addColumn("A enlever");
        modeljTablePrepa.addColumn("Enlevé");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        showCommande = new javax.swing.JButton();
        commandeRecueButton = new javax.swing.JButton();
        CmdRecueCheckBox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabelCommande = new javax.swing.JLabel();
        platEnleverButton = new javax.swing.JToggleButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePrep = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableCommande = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        showCommande.setText("Voir commande");
        showCommande.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showCommandeMouseClicked(evt);
            }
        });

        commandeRecueButton.setText("Commande reçue !");
        commandeRecueButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                commandeRecueButtonMouseClicked(evt);
            }
        });

        CmdRecueCheckBox.setText("Commande reçue");

        jLabel1.setText("Liste des plats de la commande :");

        jLabel2.setText("Plats en préparation :");

        jLabelCommande.setText(">>");

        platEnleverButton.setText("Prévenir plats à enlever");
        platEnleverButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                platEnleverButtonMouseClicked(evt);
            }
        });

        jTablePrep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTablePrep);

        jTableCommande.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTableCommande);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(122, 122, 122)
                        .addComponent(commandeRecueButton))
                    .addComponent(jLabelCommande)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(platEnleverButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CmdRecueCheckBox)
                        .addGap(44, 44, 44)
                        .addComponent(showCommande))
                    .addComponent(jSeparator1)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showCommande)
                    .addComponent(CmdRecueCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelCommande)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(commandeRecueButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(platEnleverButton)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void showCommandeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showCommandeMouseClicked
        // TODO add your handling code here:
        String[] donneesCommande = new String[4];
        String msg = new String();
        msg = nbs.getMessage();
        
        this.jLabelCommande.setText(">> " + msg);
        
        StringSlicer ss = new StringSlicer(msg, ";");
        ss.getComponents(true);
        
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Quantité");
        model.addColumn("Plat");
        model.addColumn("Table");
        model.addColumn("Heure");
        LinkedHashSet<String> hashSet = ss.listUniqueComponents();

        for(String s: hashSet)
        {
            String[] tmp = s.split("&");
            
            donneesCommande[0] = tmp[0];
            
            tmp = tmp[1].split(":");
            
            donneesCommande[1] = tmp[0];
            donneesCommande[2] = tmp[1];
            donneesCommande[3] = tmp[2];
            
            SimpleDateFormat time_formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm");
            String current_time_str = time_formatter.format(System.currentTimeMillis());
            
            //System.out.println(donneesCommande[0] + donneesCommande[1] + donneesCommande[2] + donneesCommande[3]);
            model.addRow(new Object[] { donneesCommande[1] , donneesCommande[2] , donneesCommande[0], current_time_str });
            modeljTablePrepa.addRow(new Object[] { donneesCommande[1] , donneesCommande[2] , donneesCommande[0], current_time_str.split(" ")[1], false, false, false });
        }

        this.jTableCommande.setModel(model);
        this.jTablePrep.setModel(modeljTablePrepa);
        
    }//GEN-LAST:event_showCommandeMouseClicked

    private void commandeRecueButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_commandeRecueButtonMouseClicked
        // TODO add your handling code here:
        
        for(int i=0; i<jTablePrep.getRowCount(); i++)
        {
            if ((Boolean)jTablePrep.getValueAt(i, 4) == true)
            {
                if(nbc == null)
                {
                    nbc = new NetworkBasicClient("localhost", 55554);

                    // Attente le temps du lancement du client
                    try        
                    {
                        Thread.sleep(100);
                    } 
                    catch(InterruptedException ex) 
                    {
                        Thread.currentThread().interrupt();
                    }
                }
                // Envoi etat commandeRecue vers la salle
                try
                {
                    nbc.sendStringWithoutWaiting("");
                }
                catch(Exception e)
                {
                    System.out.println("Erreur de l'envoi vers la salle, verifiez l'état du serveur de la salle!");
                }
                i = jTablePrep.getRowCount();
            }
        }
    }//GEN-LAST:event_commandeRecueButtonMouseClicked

    private void platEnleverButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_platEnleverButtonMouseClicked
        // TODO add your handling code here:
        String str = new String();
        for(int i=0; i<jTablePrep.getRowCount(); i++)
        {
            if ((Boolean)jTablePrep.getValueAt(i, 5) == true && (Boolean)jTablePrep.getValueAt(i, 6) == false)
            {
                str += (String)jTablePrep.getValueAt(i, 0) + " " + (String)jTablePrep.getValueAt(i, 1) + ";";
            }
        }
        if(nbcPlatPret == null)
        {
            nbcPlatPret = new NetworkBasicClient("localhost", 55553);

            // Attente le temps du lancement du client
            try        
            {
                Thread.sleep(100);
            } 
            catch(InterruptedException ex) 
            {
                Thread.currentThread().interrupt();
            }
        }
        // Envoi etat commandeRecue vers la salle
        try
        {
            nbcPlatPret.sendStringWithoutWaiting(str);
        }
        catch(Exception e)
        {
            System.out.println("Erreur de l'envoi vers la salle, verifiez l'état du serveur de la salle!");
        }
    }//GEN-LAST:event_platEnleverButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApplicationCuisine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApplicationCuisine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApplicationCuisine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApplicationCuisine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ApplicationCuisine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CmdRecueCheckBox;
    private javax.swing.JButton commandeRecueButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelCommande;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableCommande;
    private javax.swing.JTable jTablePrep;
    private javax.swing.JToggleButton platEnleverButton;
    private javax.swing.JButton showCommande;
    // End of variables declaration//GEN-END:variables
}
